tm<tn A>
void int_write_helper(ostream& a,tn std::enable_if<std::is_unsigned<A>::value,A>::type x) {
	if(!x) {
		a('0');
		return;
	}
	char b[20];
	A c = x;
	u i;
	for(i = 19; c; --i) {
		b[i] = c%10+'0';
		c/=10;
	}
	++i;
	for(;i<20;++i)
		a(b[i]);
}
tm<tn A>
void int_write_helper(ostream& a,tn std::enable_if<std::is_signed<A>::value,A>::type x) {
	bool neg;
	if(neg= x<0)
		a('-');
	int_write_helper<tn std::make_unsigned<A>::type>(a,tn std::make_unsigned<A>::type(neg?-x:x));
}
tm<tn A>
void Int<A>::write(ostream& a) {
	int_write_helper<A>(a,x);
}
tm<tn A>
Int<A>::Int(istream& a) {
	// ::write(1,(void*)"read int" nl,9);
	x=0;
	for(char c;;) {
		c = a.peek();
		// ::write(1,(void*)"peek:" nl,5);
		// ::write(1,(void*)&c,1);
		// ::write(1,(void*)nl,1);
		switch(c) {
			case ' ':
			case '\t':
			case '\n':
			case '\r':
				a.get();
				// ::write(1,(void*)"whitespace" nl,11);
				continue;
			default:;
		}
		break;
	}
	bool negative = false;
	if(negative= a.peek()=='-')
		a.get();
	// ::write(0,(void*)"actual" nl,7);
	for(;;) {
		char c = a.peek();
		if(c<'0'||'9'<c)
			break;
		a.get();
		x *= 10;
		x += c-'0';
		
	}
	if(negative)
		x=-x;
	// ::write(0,(void*)"done" nl,5);
}