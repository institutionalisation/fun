struct istream {
	const u fd;
	size_t t,cap;
	chunk<char> buf;
	istream(u fd,chunk<char> buf): fd(fd),buf(buf) {
		flush(); }
	void flush() {
		cap= (u)syscall(0,fd,(u ll)buf.x,buf.size);
		t = 0;
	}
	char get() {
		char a = buf[t++];
		if(t==cap)
			flush();
		return a;
	}
	char peek() {
		return buf[t]; }
	tm<tn ...T>
	std::tuple<wrap_t<T>...> get() {
		return std::make_tuple( wrap_t<T>(this)... );
	}
};