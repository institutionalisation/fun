tm<tn A>
struct chunk {
	u size;
	A* x;
	chunk(u size): size(size) {
		x= (A*)salloc(size*sizeof(A)); }
	~chunk() {
		salloc(-(s)size); }
	void resize(u new_size) {
		salloc(((s)new_size-(s)size)*sizeof(A));
		size= new_size;
	}
	A& operator[](u i) {
		return x[i]; }
	void zero() {
		for(u i = 0; i<size; ++i)
			x[i]= 0;
	}
};
struct string : public chunk<Char> {
	using c= chunk<Char>;
	using c::chunk;
	string(const char* str): chunk(strlen(str)) {
		for(u i= 0; i<c::size;++i)
			c::x[i]= str[i];
	}
	void write(ostream& a);
};
string wrap(const char* a) {
	return string(a); }