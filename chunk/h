tm<tn A>
struct chunk {
	u size;
	A* x;
	chunk(u size): size(size) {
		write(1,(void*)"alloc buffer" nl,13);
		x= (A*)sbrk(size*sizeof(A));
		write(1,(void*)"done buffer" nl,12);
	}
	~chunk() {
		sbrk(-(s)size); }
	void resize(u new_size) {
		sbrk((s)new_size-(s)size);
		size= new_size;
	}
	A& operator[](u i) {
		return x[i]; }
	void zero() {
		for(u i = 0; i<size; ++i)
			x[i]= 0;
	}
};
struct string : public chunk<Char> {
	using c= chunk<Char>;
	using c::chunk;
	string(const char* str): chunk(strlen(str)) {
		for(u i= 0; i<c::size;)
			c::x[i]= str[i];
	}
	tm<tn os>
	void write(os& a);
};
string wrap(const char* a) {
	return string(a); }